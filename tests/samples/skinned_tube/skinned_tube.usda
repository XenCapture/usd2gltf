#usda 1.0
(
    defaultPrim = "Geometry"
    endTimeCode = 24
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "Geometry" (
    kind = "component"
)
{
    def SkelRoot "character"
    {
        matrix4d primvars:localtransform.timeSamples = {
            1: ( (-0.03039911761879921, 0.012628571130335331, 0.9994580745697021, 0), (-0.9995319247245789, 0.003053375519812107, -0.030439944937825203, 0), (-0.0034361344296485186, -0.9999156594276428, 0.012529859319329262, 0), (0.03679580241441727, -0.49805697798728943, -8.940696716308594e-8, 1) ),
            2: ( (-0.03039911761879921, -0.10851505398750305, 0.9936299324035645, 0), (-0.9995319247245789, 0.00671767070889473, -0.02984604425728321, 0), (-0.0034361344296485186, -0.9940721988677979, -0.10866846144199371, 0), (0.03679580241441727, -0.49439045786857605, -0.06032290682196617, 1) ),
            3: ( (-0.03039911761879921, -0.2077948898077011, 0.9776999354362488, 0), (-0.9995319247245789, 0.009682280011475086, -0.02902011014521122, 0), (-0.0034361344296485186, -0.9781245589256287, -0.20799194276332855, 0), (0.03679580241441727, -0.48582834005355835, -0.10968854278326035, 1) ),
            4: ( (-0.03039911761879921, -0.2685926556587219, 0.9627740979194641, 0), (-0.9995319247245789, 0.01147998683154583, -0.028357068076729774, 0), (-0.0034361344296485186, -0.9631854891777039, -0.26881590485572815, 0), (0.03679580241441727, -0.47800877690315247, -0.13988691568374634, 1) ),
            5: ( (-0.03039911761879921, -0.281974732875824, 0.9589401483535767, 0), (-0.9995319247245789, 0.011873790062963963, -0.02819444052875042, 0), (-0.0034361344296485186, -0.9593484401702881, -0.28220370411872864, 0), (0.03679580241441727, -0.47601428627967834, -0.1465303748846054, 1) ),
            6: ( (-0.03039911761879921, -0.24614301323890686, 0.9687566757202148, 0), (-0.9995319247245789, 0.010817802511155605, -0.028616227209568024, 0), (-0.0034361344296485186, -0.9691731929779053, -0.24635662138462067, 0), (0.03679580241441727, -0.4811309576034546, -0.12873908877372742, 1) ),
            7: ( (-0.03039911761879921, -0.16605624556541443, 0.9856476187705994, 0), (-0.9995319247245789, 0.00844021700322628, -0.029405375942587852, 0), (-0.0034361344296485186, -0.9860802292823792, -0.166235089302063, 0), (0.03679580241441727, -0.4900510013103485, -0.08894240856170654, 1) ),
            8: ( (-0.03039911761879921, -0.05422385782003403, 0.9980659484863281, 0), (-0.9995319247245789, 0.00508177001029253, -0.030167680233716965, 0), (-0.0034361344296485186, -0.9985159039497375, -0.05435293912887573, 0), (0.03679580241441727, -0.4969424903392792, -0.03330037742853165, 1) ),
            9: ( (-0.03039911761879921, 0.06971627473831177, 0.9971036314964294, 0), (-0.9995319247245789, 0.001309070037677884, -0.0305646825581789, 0), (-0.0034361344296485186, -0.9975660443305969, 0.06964386999607086, 0), (0.03679580241441727, -0.4972432851791382, 0.02845853753387928, 1) ),
            10: ( (-0.03039911761879921, 0.18298032879829407, 0.9826464653015137, 0), (-0.9995319247245789, -0.0021853509824723005, -0.0305145476013422, 0), (-0.0034361344296485186, -0.9831142425537109, 0.1829611361026764, 0), (0.03679580241441727, -0.4907531440258026, 0.08498308062553406, 1) ),
            11: ( (-0.03039911761879921, 0.265703022480011, 0.963575541973114, 0), (-0.9995319247245789, -0.004766787402331829, -0.030219051986932755, 0), (-0.0034361344296485186, -0.9640432000160217, 0.2657235860824585, 0), (0.03679580241441727, -0.48177188634872437, 0.1263195276260376, 1) ),
            12: ( (-0.03039911761879921, 0.3050508499145508, 0.9518507719039917, 0), (-0.9995319247245789, -0.006003796588629484, -0.029997795820236206, 0), (-0.0034361344296485186, -0.9523171782493591, 0.3050905764102936, 0), (0.03679580241441727, -0.47617775201797485, 0.1459982842206955, 1) ),
            13: ( (-0.03039911761879921, 0.29568159580230713, 0.9548027515411377, 0), (-0.9995319247245789, -0.005708697251975536, -0.030055351555347443, 0), (-0.0034361344296485186, -0.9552695155143738, 0.2957167625427246, 0), (0.03679580241441727, -0.47758957743644714, 0.14131149649620056, 1) ),
            14: ( (-0.03039911761879921, 0.23881448805332184, 0.9705893397331238, 0), (-0.9995319247245789, -0.003924903459846973, -0.030339881777763367, 0), (-0.0034361344296485186, -0.9710573554039001, 0.23882204294204712, 0), (0.03679580241441727, -0.48509716987609863, 0.11287821829319, 1) ),
            15: ( (-0.03039911761879921, 0.14253085851669312, 0.9893234372138977, 0), (-0.9995319247245789, -0.0009321982506662607, -0.03057849407196045, 0), (-0.0034361344296485186, -0.9897899627685547, 0.14249251782894135, 0), (0.03679580241441727, -0.493825227022171, 0.06478720903396606, 1) ),
            16: ( (-0.03039911761879921, 0.02257615327835083, 0.9992828369140625, 0), (-0.9995319247245789, 0.0027502370066940784, -0.030468830838799477, 0), (-0.0034361344296485186, -0.9997414350509644, 0.022482000291347504, 0), (0.03679580241441727, -0.4980323016643524, 0.004957371391355991, 1) ),
            17: ( (-0.03039911761879921, -0.0994001105427742, 0.9945830702781677, 0), (-0.9995319247245789, 0.006443736143410206, -0.02990638092160225, 0), (-0.0034361344296485186, -0.995026707649231, -0.09954945743083954, 0), (0.03679580241441727, -0.4949227273464203, -0.055787406861782074, 1) ),
            18: ( (-0.03039911761879921, -0.20112672448158264, 0.9790934920310974, 0), (-0.9995319247245789, 0.009484273381531239, -0.029085425660014153, 0), (-0.0034361344296485186, -0.9795194268226624, -0.20132088661193848, 0), (0.03679580241441727, -0.48656460642814636, -0.10637491941452026, 1) ),
            19: ( (-0.03039911761879921, -0.26541846990585327, 0.9636539816856384, 0), (-0.9995319247245789, 0.011386477388441563, -0.02839474380016327, 0), (-0.0034361344296485186, -0.9640661478042603, -0.26564037799835205, 0), (0.03679580241441727, -0.4784671664237976, -0.13831092417240143, 1) ),
            20: ( (-0.03039911761879921, -0.28273066878318787, 0.9587174654006958, 0), (-0.9995319247245789, 0.011896014213562012, -0.02818506956100464, 0), (-0.0034361344296485186, -0.9591256380081177, -0.2829599678516388, 0), (0.03679580241441727, -0.4758986234664917, -0.14690560102462769, 1) ),
            21: ( (-0.03039911761879921, -0.2507295608520508, 0.96757972240448, 0), (-0.9995319247245789, 0.010953244753181934, -0.028564659878611565, 0), (-0.0034361344296485186, -0.967995285987854, -0.25094515085220337, 0), (0.03679580241441727, -0.48051565885543823, -0.13101691007614136, 1) ),
            22: ( (-0.03039911761879921, -0.17381355166435242, 0.9843092560768127, 0), (-0.9995319247245789, 0.008671537041664124, -0.029337992891669273, 0), (-0.0034361344296485186, -0.9847404956817627, -0.17399577796459198, 0), (0.03679580241441727, -0.4893353581428528, -0.09279903024435043, 1) ),
            23: ( (-0.03039911761879921, -0.06386853754520416, 0.9974952936172485, 0), (-0.9995319247245789, 0.005373130552470684, -0.030117150396108627, 0), (-0.0034361344296485186, -0.9979439377784729, -0.06400196254253387, 0), (0.03679580241441727, -0.49659740924835205, -0.038102224469184875, 1) ),
            24: ( (-0.03039911761879921, 0.05993850529193878, 0.9977390766143799, 0), (-0.9995319247245789, 0.0016086268005892634, -0.030550379306077957, 0), (-0.0034361344296485186, -0.9982008337974548, 0.059861570596694946, 0), (0.03679580241441727, -0.4974983334541321, 0.023582788184285164, 1) ),
        }
        int[] primvars:localtransform:indices = None
        int primvars:scaleinheritance.timeSamples = {
            1: 0,
            2: 0,
            3: 0,
            4: 0,
            5: 0,
            6: 0,
            7: 0,
            8: 0,
            9: 0,
            10: 0,
            11: 0,
            12: 0,
            13: 0,
            14: 0,
            15: 0,
            16: 0,
            17: 0,
            18: 0,
            19: 0,
            20: 0,
            21: 0,
            22: 0,
            23: 0,
            24: 0,
        }
        int[] primvars:scaleinheritance:indices = None
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        matrix4d xformOp:transform.timeSamples = {
            1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            2: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            3: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            4: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            5: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            6: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            7: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            8: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            9: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            10: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            11: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            12: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            13: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            14: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            15: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            16: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            17: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            18: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            19: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            20: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            21: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            22: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            23: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            24: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def SkelAnimation "animation"
        {
            uniform token[] joints = ["point_0", "point_0/point_1", "point_0/point_1/point_2"]
            quatf[] rotations.timeSamples = {
                1: [(-0.4962822, -0.48836914, 0.5052036, -0.5098714), (-0.29546165, 0.6332787, -0.66212237, 0.2706555), (0.9435625, 0.33117285, 0.0037893371, -0.00015891627)],
                2: [(0.46573868, 0.5175789, -0.5352068, 0.47828156), (-0.25571388, 0.65034604, -0.64410806, 0.31110328), (0.92127854, 0.3888849, 0.0037919083, 0.000075708616)],
                3: [(0.43911594, 0.54034954, -0.558586, 0.45075628), (-0.21961655, 0.66340643, -0.62605315, 0.34600276), (0.89698374, 0.44204724, 0.0037810088, 0.0002971209)],
                4: [(0.42197895, 0.55383587, -0.5724279, 0.4330425), (-0.19387431, 0.6713809, -0.61224675, 0.36988422), (0.876171, 0.48198548, 0.0037638033, 0.00046706747)],
                5: [(0.41811213, 0.5567609, -0.57542956, 0.42904592), (-0.1833811, 0.67432255, -0.60640424, 0.37938675), (0.8643953, 0.5027985, 0.003751553, 0.00055693643)],
                6: [(0.4283871, 0.5488943, -0.56735647, 0.43966597), (-0.19014555, 0.6724464, -0.6101847, 0.3732761), (0.8650503, 0.5016708, 0.0037522726, 0.0005520264)],
                7: [(0.45050138, 0.53089446, -0.5488794, 0.4625267), (-0.21287234, 0.6656012, -0.6225093, 0.35233882), (0.8779431, 0.47874996, 0.0037654983, 0.00045318995)],
                8: [(0.47966906, 0.50469595, -0.5219755, 0.4926876), (-0.24722992, 0.65361834, -0.6400054, 0.31945813), (0.89937645, 0.43715852, 0.0037825706, 0.00027653715)],
                9: [(-0.5100377, -0.47398522, 0.4904244, -0.52410257), (-0.28679082, 0.6372524, -0.6583667, 0.27966726), (0.92369694, 0.38310522, 0.0037923125, 0.000051948275)],
                10: [(-0.53627807, -0.44407913, 0.45968813, -0.5512589), (-0.32447925, 0.6189126, -0.67394894, 0.23969412), (0.94553757, 0.3254909, 0.0037883162, -0.00018172014)],
                11: [(-0.5546525, -0.42090502, 0.43586373, -0.5702827), (-0.35406476, 0.6024763, -0.68476385, 0.20678222), (0.9615694, 0.2745358, 0.003773204, -0.00038373843)],
                12: [(-0.5631802, -0.40942463, 0.42405918, -0.5791143), (-0.3711466, 0.5921062, -0.6903964, 0.18711825), (0.9708471, 0.23966968, 0.0037569078, -0.00051960367)],
                13: [(-0.5611615, -0.4121871, 0.4268998, -0.5770235), (-0.37343174, 0.59066767, -0.6911143, 0.18444912), (0.97378176, 0.22745267, 0.0037500977, -0.00056678924)],
                14: [(-0.54874814, -0.42857432, 0.44374886, -0.5641689), (-0.36062917, 0.5985701, -0.6869832, 0.19928488), (0.97071815, 0.24019139, 0.0037571883, -0.0005176051)],
                15: [(-0.5270581, -0.45498368, 0.4708966, -0.54171574), (-0.33441815, 0.61359924, -0.6777268, 0.22879426), (0.9612991, 0.27548063, 0.0037735729, -0.0003800291)],
                16: [(-0.4987066, -0.48589316, 0.5026598, -0.51237947), (-0.2985709, 0.6318188, -0.66344476, 0.26739764), (0.9451267, 0.32668197, 0.0037885401, -0.00017693511)],
                17: [(0.4681066, 0.5154383, -0.5330085, 0.48073015), (-0.25884047, 0.649108, -0.6455977, 0.30800012), (0.9231897, 0.38432583, 0.0037922394, 0.000056960645)],
                18: [(0.44095472, 0.53885007, -0.5570467, 0.45265713), (-0.22219266, 0.6625481, -0.6273928, 0.34356758), (0.89887005, 0.43819886, 0.0037822453, 0.00028091122)],
                19: [(0.42289093, 0.55313987, -0.5717136, 0.4339851), (-0.195414, 0.6709344, -0.6130937, 0.36847878), (0.8775624, 0.47944742, 0.003765132, 0.00045616986)],
                20: [(0.4178926, 0.55692565, -0.5755986, 0.42881906), (-0.18359011, 0.6742657, -0.6065218, 0.3791988), (0.8649017, 0.50192696, 0.003752122, 0.0005531539)],
                21: [(0.42708576, 0.54990745, -0.56839633, 0.43832085), (-0.1889839, 0.67277384, -0.60953903, 0.37432948), (0.8645225, 0.50257975, 0.0037517033, 0.00055599696)],
                22: [(0.44840735, 0.53266436, -0.5506965, 0.46036175), (-0.2105623, 0.6663356, -0.62128335, 0.354496), (0.8765365, 0.48132047, 0.0037641386, 0.00046419993)],
                23: [(0.4772243, 0.5070083, -0.5243506, 0.49015915), (-0.24420972, 0.65475273, -0.6385238, 0.32240936), (0.8974849, 0.44102892, 0.0037813457, 0.0002928369)],
                24: [(-0.5077084, -0.47647947, 0.49298736, -0.52169245), (-0.28361705, 0.6386712, -0.6569672, 0.28293905), (0.92178977, 0.3876716, 0.0037920084, 0.00007071457)],
            }
            half3[] scales.timeSamples = {
                1: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                2: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                3: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                4: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                5: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                6: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                7: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                8: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                9: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                10: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                11: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                12: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                13: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                14: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                15: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                16: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                17: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                18: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                19: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                20: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                21: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                22: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                23: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                24: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
            }
            float3[] translations.timeSamples = {
                1: [(0.036795802, -0.49805698, -8.940697e-8), (5.5879354e-9, 0.021043977, -0.49677345), (-0.0037510851, 0.39363673, 0.30931798)],
                2: [(0.036795802, -0.49439046, -0.060322907), (1.2572855e-8, -0.0404713, -0.49556908), (-0.0037510917, 0.35244593, 0.35554087)],
                3: [(0.036795802, -0.48582834, -0.10968854), (-1.2572855e-8, -0.09456998, -0.48814267), (-0.003751099, 0.30856502, 0.39422715)],
                4: [(0.036795802, -0.47800878, -0.13988692), (1.21071935e-8, -0.13190344, -0.47940397), (-0.0037510842, 0.2718499, 0.42038688)],
                5: [(0.036795802, -0.4760143, -0.14653037), (8.381903e-9, -0.14678931, -0.47505745), (-0.0037510693, 0.25144035, 0.4329032)],
                6: [(0.036795802, -0.48113096, -0.12873909), (2.7939677e-9, -0.13721605, -0.47791052), (-0.0037510544, 0.25256857, 0.43224597)],
                7: [(0.036795802, -0.490051, -0.08894241), (7.450581e-9, -0.104458354, -0.48612258), (-0.003751099, 0.27494413, 0.41836965)],
                8: [(0.036795802, -0.4969425, -0.033300377), (6.519258e-9, -0.053353235, -0.4943482), (-0.003751099, 0.3128381, 0.39084497)],
                9: [(0.036795802, -0.4972433, 0.028458538), (6.9849193e-9, 0.0074769706, -0.49716276), (-0.0037510917, 0.35687327, 0.35109675)],
                10: [(0.036795802, -0.49075314, 0.08498308), (-1.9557774e-8, 0.06692736, -0.49269396), (-0.0037510786, 0.39732954, 0.30455983)],
                11: [(0.036795802, -0.4817719, 0.12631953), (-1.9092113e-8, 0.11426745, -0.48391074), (-0.0037510842, 0.42754355, 0.26044962)],
                12: [(0.036795802, -0.47617775, 0.14599828), (2.4680048e-8, 0.14174217, -0.47658774), (-0.0037510842, 0.44520935, 0.22894554)],
                13: [(0.036795802, -0.47758958, 0.1413115), (1.816079e-8, 0.14542103, -0.4754781), (-0.003751099, 0.4508215, 0.21768656)],
                14: [(0.036795802, -0.48509717, 0.11287822), (2.142042e-8, 0.124818556, -0.48129725), (-0.003751099, 0.444963, 0.22942387)],
                15: [(0.036795802, -0.49382523, 0.06478721), (1.071021e-8, 0.0827817, -0.4902794), (-0.0037510656, 0.42703083, 0.26128936)],
                16: [(0.036795802, -0.4980323, 0.0049573714), (6.0535967e-9, 0.025926584, -0.4965426), (-0.0037510833, 0.39656082, 0.3055601)],
                17: [(0.036795802, -0.49492273, -0.055787407), (8.381903e-9, -0.03569998, -0.49593568), (-0.0037510917, 0.35594383, 0.35203895)],
                18: [(0.036795802, -0.4865646, -0.10637492), (-9.778887e-9, -0.09077368, -0.48886278), (-0.0037510693, 0.31193277, 0.3915679)],
                19: [(0.036795802, -0.47846717, -0.13831092), (4.1909516e-9, -0.12970251, -0.48000416), (-0.0037510842, 0.27427894, 0.41880605)],
                20: [(0.036795802, -0.47589862, -0.1469056), (1.9092113e-8, -0.14649478, -0.47514844), (-0.0037510842, 0.25231257, 0.4323955)],
                21: [(0.036795802, -0.48051566, -0.13101691), (-2.9802322e-8, -0.13886607, -0.4774337), (-0.0037510544, 0.2516594, 0.4327759)],
                22: [(0.036795802, -0.48933536, -0.09279903), (9.778887e-9, -0.10782825, -0.48538628), (-0.003751099, 0.27248764, 0.4199738)],
                23: [(0.036795802, -0.4965974, -0.038102224), (1.3969839e-9, -0.057915375, -0.4938345), (-0.003751099, 0.30945903, 0.39352584)],
                24: [(0.036795802, -0.49749833, 0.023582788), (4.1909516e-9, 0.002530072, -0.4972125), (-0.0037510842, 0.35338086, 0.35461158)],
            }
        }

        def Mesh "geometry" (
            prepend apiSchemas = ["SkelBindingAPI"]
        )
        {
            int[] faceVertexCounts = [4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4]
            uniform token orientation = "leftHanded"
            point3f[] points = [(-0.25, -0.5, 0), (0.25, -0.5, 0), (-0.25, 0, 0), (0.25, 0, 0), (-0.25, 0.5, 0), (0.25, 0.5, 0)] (
                interpolation = "vertex"
            )
            float primvars:pCaptFrame = 0
            int[] primvars:pCaptFrame:indices = None
            string primvars:pCaptSkelRoot = ""
            int[] primvars:pCaptSkelRoot:indices = None
            uniform matrix4d primvars:skel:geomBindTransform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform int[] primvars:skel:jointIndices = [0, 1, 2, 0, 1, 2, 1, 0, 2, 1, 0, 2, 2, 1, 0, 2, 1, 0] (
                elementSize = 3
                interpolation = "vertex"
            )
            uniform float[] primvars:skel:jointWeights = [0.8023044, 0.19490819, 0.002787412, 0.8012849, 0.1959927, 0.002722461, 0.46405128, 0.42184255, 0.11410617, 0.4654455, 0.4233819, 0.111172624, 0.49656498, 0.45228127, 0.05115375, 0.49416992, 0.4533891, 0.052440982] (
                elementSize = 3
                interpolation = "vertex"
            )
            uniform token[] skel:joints = ["point_0", "point_0/point_1", "point_0/point_1/point_2"]
            append rel skel:skeleton = </Geometry/character/skeleton>
            uniform token subdivisionScheme = "none"
        }

        def Skeleton "skeleton"
        {
            uniform matrix4d[] bindTransforms = [( (-0.03039911761879921, 0.012628571130335331, 0.9994580745697021, 0), (-0.9995318651199341, 0.003053375519812107, -0.030439944937825203, 0), (-0.0034361344296485186, -0.999915599822998, 0.012529859319329262, 0), (0.03679580241441727, -0.49805694818496704, -9.022187441587448e-8, 1) ), ( (0.999971330165863, 0.002809739438816905, 0.00704569648951292, 0), (0.002809738740324974, 0.7255820631980896, -0.6881300806999207, 0), (-0.007045700680464506, 0.6881300806999207, 0.7255532145500183, 0), (0.03850431367754936, -0.0008799380739219487, -0.0062301685102283955, 1) ), ( (1, -0, 0, 0), (-0, 1, 0, 0), (0, -0, 1, 0), (0.033378779888153076, 0.49971407651901245, -0.010806195437908173, 1) )]
            uniform token[] jointNames = ["point_0", "point_1", "point_2"]
            uniform token[] joints = ["point_0", "point_0/point_1", "point_0/point_1/point_2"]
            uniform token purpose = "guide"
            uniform matrix4d[] restTransforms = [( (-0.03039911761879921, 0.012628571130335331, 0.9994580745697021, 0), (-0.9995318651199341, 0.003053375519812107, -0.030439944937825203, 0), (-0.0034361344296485186, -0.999915599822998, 0.012529859319329262, 0), (0.03679580241441727, -0.49805694818496704, -9.022187441587448e-8, 1) ), ( (-0.02332088627706649, -0.9997092374045544, -0.00615725629593162, 0), (-0.6786794798663659, 0.02035369399771788, -0.7341526304252451, 0), (0.7340642925963302, -0.012942278262490932, -0.678956719269529, 0), (5.521643084600847e-9, -1.9058861433496332e-10, -0.4972189754114301, 1) ), ( (0.9999711325126286, 0.0028097394426359478, -0.0070456952929663415, 0), (0.002809742833347938, 0.72558185624031, 0.6881299602586302, 0), (0.007045697853191629, -0.688129960275327, 0.7255531675668493, 0), (-0.0037510866862954795, 0.3663564341446407, 0.3411897014845887, 1) )]
            append rel skel:animationSource = </Geometry/character/animation>
            uniform token visibility = "invisible"
        }
    }
}

